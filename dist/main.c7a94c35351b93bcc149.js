(()=>{"use strict";var t={};t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var a=t.g.document;if(!e&&a&&(a.currentScript&&(e=a.currentScript.src),!e)){var s=a.getElementsByTagName("script");s.length&&(e=s[s.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})();const e=t.p+"image/sprite.c2f35f7fc324cd7b58fd..svg";class a{static createEle(...t){const[e,...a]=t,s=document.createElement(e);return a.forEach((t=>s.classList.add(t))),s}static createSVG(...t){const[a,...s]=t,i="http://www.w3.org/2000/svg",l=document.createElementNS(i,"svg"),o=document.createElementNS(i,"use");return o.setAttribute("href",`${e}#icon-${a}`),s.forEach((t=>l.classList.add(t))),l.append(o),l}static findEle(t){return document.querySelector(t)}static findEles(t){return document.querySelectorAll(t)}static capitalise(t){return t.charAt(0).toUpperCase()+t.slice(1)}static clear=t=>{for(;t.firstElementChild;)t.firstElementChild.remove()};constructor(){this.header=a.findEle("header"),this.navContainer=a.findEle('[data-label="nav-container"]'),this.sidebar=a.findEle('[data-label="nav-list"]'),this.burgerBtn=a.findEle('[data-label="toggle-navigation"]'),this.newProjectBtn=a.findEle('[data-label="add-project-btn"]'),this.newTaskBtn=a.findEle('[data-label="add-task-btn"]'),this.labelTaskListHeading=a.findEle('[data-label="task-list-title"]'),this.taskList=a.findEle('[data-label="task-list"]'),this.filterBtn=a.findEle('[data-label="filter-button"]'),this.filterList=a.findEle('[data-label="filter-list"]'),this.projectBtn=a.findEle('[data-label="projects-button"]'),this.projectList=a.findEle('[data-label="project-list"]'),this.modalTitle=a.findEle('[data-label="modal-title"]'),this.modal=a.findEle('[data-label="modal"]'),this.form=a.findEle('[data-label="modal-task-form"]'),this.warning=a.findEle('[data-label="form-warning"]')}taskDetails(){const t=a.findEle('[data-label="modal-task-title"]'),e=a.findEle('[data-label="modal-task-date"]'),s=a.findEle('[data-label="modal-task-project"]'),i=a.findEles('input[name="priority"]'),l=a.findEle('[data-label="modal-task-description"]');let o,n,r;return i.forEach((t=>{t.checked&&(n=t.value)})),t.value||e.value?t.value?e.value?(new Date).toISOString()>new Date(e.value).toISOString()&&(r="Date cannot be in the past!",t.classList.remove("invalid"),e.classList.add("invalid")):(r="Date is required!",t.classList.remove("invalid"),e.classList.add("invalid")):(r="Title is required!",t.classList.add("invalid"),e.classList.remove("invalid")):(r="Title and due date are required!",t.classList.add("invalid"),e.classList.add("invalid")),r?this.warning.textContent=r:(this.warning.textContent="",o={title:t.value,description:l.value||"No description",date:e.value,priority:n||"Low",project:s.value}),o}projectDetails(){const t=a.findEle('[data-label="project-title"]');let e;return t.value?this.getProjects().forEach((a=>{a.name===t.value&&(e="Project already exists. Choose another name",t.classList.add("invalid"))})):(e="Project title is required",t.classList.add("invalid")),this.warning.textContent=e||"",t.value}eventToggleNav=()=>this.burgerBtn.addEventListener("click",this.toggleNav);eventToggleFilter=()=>this.filterBtn.addEventListener("click",this.toggleFilter);eventToggleProjects=()=>this.projectBtn.addEventListener("click",this.toggleProjects);toggleNav=()=>this.navContainer.classList.toggle("sidebar-hidden");toggleFilter=()=>this.filterList.classList.toggle("hidden");toggleProjects=()=>{const t=a.findEle('[data-label="expand-icon"]');this.projectList.hasAttribute("data-visible")?(this.projectBtn.setAttribute("aria-expanded",!1),t.setAttribute("href",`${e}#icon-expand`)):(this.projectBtn.setAttribute("aria-expanded",!0),t.setAttribute("href",`${e}#icon-shrink`)),this.projectList.classList.toggle("hidden"),this.projectList.toggleAttribute("data-visible")};displayTasks(t){if(a.clear(this.taskList),t.length)t.forEach((t=>{const e=a.createSVG("alarm","icon","icon-4"),s=a.createSVG("label","icon","icon-4"),i=a.createSVG("delete","icon","icon-5"),l=a.createSVG("edit","icon","icon-5"),o=a.createEle("li","tasks-list-item");o.dataset.taskid=t.id;const n=a.createEle("details","tasks-details"),r=a.createEle("summary","tasks-summary");"High"===t.priority&&o.classList.add("priority-high"),"Medium"===t.priority&&o.classList.add("priority-medium"),"Low"===t.priority&&o.classList.add("priority-low");const d=a.createEle("span","tasks-list-item-title");d.textContent=t.task;const c=a.createEle("p","tasks-list-item-description");c.textContent=t.description;const h=a.createEle("span","tasks-list-item-date");if((new Date).toISOString()>new Date(t.duedate).toISOString()){const e=Math.round(Math.abs((new Date-new Date(t.duedate))/864e5));h.textContent=`${e} ${e>1?"days":"day"} overdue`,t.complete||h.classList.add("tasks-list-item-date--overdue")}else if((new Date).toDateString()===new Date(t.duedate).toDateString())h.textContent="Today!";else{const e=Math.round(Math.abs((new Date(t.duedate)-new Date)/864e5));h.textContent=0===e?"Due tomorrow":t.duedate}h.prepend(e);const p=a.createEle("span","tasks-list-item-project");p.textContent=t.project,p.prepend(s);const m=a.createEle("input","tasks-list-item-checkbox");m.type="checkbox";const k=a.createEle("div","tasks-list-item-buttons-wrapper"),u=a.createEle("button","btn","btn-icon-only","btn-tasklist","btn--red");u.append(i),u.dataset.label="delete-button";const b=a.createEle("button","btn","btn-icon-only","btn-tasklist","btn--orange");b.append(l),b.dataset.label="edit-button",k.append(b,u),t.complete&&(o.classList.add("tasks-complete"),m.checked=!0,m.classList.add("tasks-list-item-checkbox-complete"),d.classList.add("tasks-list-item-complete"),h.textContent="Complete"),r.append(d,k,h,p),n.append(r,c),o.append(m,n),this.taskList.append(o)}));else{const t=a.createEle("p","tasks-notask-text");t.textContent="No tasks, go take a walk",this.taskList.append(t)}}buildModal=(t,e)=>{a.clear(this.form);const s=a.createEle("div","modal-button-wrapper");s.dataset.label="form-button-container";const i=a.createEle("button","btn","btn-form","btn--red");i.dataset.label="close-modal",i.id="close-modal",i.textContent="Cancel",i.type="button";const l=a.createEle("button","btn","btn-form","btn--green");if(l.type="submit",l.dataset.label="submit",l.id="submit",l.textContent="Submit",l.dataset.subtype=t,"task"===t||"edit"===t){this.modalTitle.textContent="task"===t?"New Task":"Edit Task";const s=a.createEle("input","modal-input","modal-task-title");s.dataset.label="modal-task-title",s.type="text",s.id="modal-task-title",s.placeholder="Task title";const i=a.createEle("textarea","modal-task-desc");i.placeholder="Task description...",i.dataset.label="modal-task-description",i.setAttribute("rows","6");const o=a.createEle("fieldset","modal-form-item-wrapper","modal-task-date"),n=a.createEle("label","modal-label");n.textContent="Due",n.for="modal-task-date";const r=a.createEle("input","modal-input");r.dataset.label="modal-task-date",r.type="date",r.id="modal-task-date",r.placeholder="Due date...",o.append(n,r);const d=a.createEle("fieldset","modal-form-item-wrapper"),c=a.createEle("label","modal-label");c.textContent="Project",c.for="modal-project-select";const h=a.createEle("select","modal-input","modal-task-project");h.dataset.label="modal-task-project",h.id="modal-project-select",d.append(c,h),this.getProjects().forEach((t=>{const e=a.createEle("option");e.value=t.name,e.textContent=t.name,h.append(e),this.labelTaskListHeading.textContent===t.name&&(h.value=t.name)}));const p=a.createEle("fieldset","modal-form-item-wrapper","modal-task-prio"),m=a.createEle("div","modal-radio-wrapper"),k=a.createEle("p","modal-label");k.textContent="Priority";const u=a.createEle("label","btn","btn-form","btn--red");u.setAttribute("for","highPrio"),u.textContent="High";const b=a.createEle("input","modal-radio");b.id="highPrio",b.type="radio",b.name="priority",b.value="High";const g=a.createEle("label","btn","btn-form","btn--orange");g.setAttribute("for","mediumPrio"),g.textContent="Medium";const f=a.createEle("input","modal-radio");f.id="mediumPrio",f.type="radio",f.name="priority",f.value="Medium";const v=a.createEle("label","btn","btn-form","btn--green");v.setAttribute("for","lowPrio"),v.textContent="Low";const j=a.createEle("input","modal-radio");if(j.id="lowPrio",j.type="radio",j.name="priority",j.value="Low",m.append(b,u,f,g,j,v),p.append(k,m),"edit"===t){const[t]=e;s.value=t.task,r.value=t.duedate,h.value=t.project,i.value=t.description,l.dataset.taskid=t.id,"High"===t.priority&&(b.checked=!0),"Medium"===t.priority&&(f.checked=!0),"Low"===t.priority&&(j.checked=!0)}this.form.prepend(s,i,p,d,o)}else if("project"===t){this.modalTitle.textContent="New Project";const t=a.createEle("input","modal-input","modal-project-title");t.dataset.label="project-title",t.type="text",t.id="project-title",t.placeholder="Project title...",this.form.append(t)}s.append(i,l),this.form.append(s),this.modal.showModal()};displayProjects(t){a.clear(this.projectList),t.forEach((t=>{const e=a.createEle("li","projects-item"),s=a.createEle("p");if(s.textContent=t.name,e.dataset.projectid=t.id,e.dataset.label="filter",e.dataset.filter=t.name,e.append(s),t.id>1){e.dataset.projecttype="custom";const t=a.createEle("button","btn","btn-icon-only","btn-project-delete");t.dataset.label="delete-button";const s=a.createSVG("close","icon","icon-3");t.append(s),e.append(t)}this.projectList.append(e)}))}eventCloseModal(){this.form.addEventListener("click",(t=>{const{target:e}=t;"close-modal"===e.dataset.label&&(a.clear(this.form),this.modal.close(),this.warning.textContent="")}))}eventNewTask(){this.newTaskBtn.addEventListener("click",(()=>{this.buildModal("task")}))}eventNewProject(){this.newProjectBtn.addEventListener("click",(()=>{this.buildModal("project")}))}eventUpdateLists(t){this.form.addEventListener("submit",(e=>{e.preventDefault();const a=e.submitter.dataset.subtype;if("task"===a)this.taskDetails()&&(t(this.taskDetails(),a),this.modal.close());else if("project"===a)this.projectDetails()&&(t(this.projectDetails(),a),this.modal.close());else if("edit"===a&&this.taskDetails()){const s=this.taskDetails();s.id=Number(e.submitter.dataset.taskid),t(s,a),this.modal.close()}}))}eventClickToEditTask(t){this.taskList.addEventListener("click",(e=>{const{target:a}=e;if("edit-button"===a.closest("button")?.dataset.label){const e=Number(a.closest("li").dataset.taskid),s=t(e);this.buildModal("edit",s)}}))}eventDeleteTask(t){this.taskList.addEventListener("click",(e=>{const{target:a}=e;if("delete-button"===a.closest("button")?.dataset.label){const e=Number(a.closest("li").dataset.taskid);t(e)}}))}eventCompleteTask(t){this.taskList.addEventListener("change",(e=>{if("checkbox"===e.target.type){const a=Number(e.target.parentElement.dataset.taskid);t(a)}}))}eventDeleteProject(t){this.projectList.addEventListener("click",(e=>{const a=e.target.closest("button");if("delete-button"===a?.dataset.label){e.stopImmediatePropagation();const s=a.closest("li").dataset.projectid;t(Number(s)),this.labelTaskListHeading.textContent="All"}}))}eventFilter(t){this.filterList.addEventListener("click",(e=>{if("filter"===e.target.closest("li")?.dataset.label){const{filter:s}=e.target.closest("li").dataset;this.labelTaskListHeading.textContent=a.capitalise(s),t(s),this.toggleFilter()}})),this.projectList.addEventListener("click",(e=>{if(e.stopPropagation(),"filter"===e.target.closest("li").dataset?.label){const{filter:s}=e.target.closest("li").dataset;this.labelTaskListHeading.textContent=a.capitalise(s),t(s)}}))}}new class{constructor(t,e){this.view=e,this.model=t,this.view.eventUpdateLists(this.handleUpdateLists),this.view.eventDeleteTask(this.handleDeleteTask),this.view.eventCompleteTask(this.handleCompleteTask),this.view.eventDeleteProject(this.handleDeleteProject),this.view.eventClickToEditTask(this.handleGetEditTask),this.view.getProjects=this.handleProjectsRequest,this.model.eventOnTaskChange(this.onTaskChange),this.onTaskChange(this.model.tasks),this.model.eventOnProjectChange(this.onProjectChange),this.onProjectChange(this.model.projects),this.view.eventToggleNav(),this.view.eventToggleFilter(),this.view.eventCloseModal(),this.view.eventNewProject(),this.view.eventNewTask(),this.view.eventFilter(this.handleFilterTasks),this.view.eventToggleProjects(),this.filter="all"}onTaskChange=t=>this.view.displayTasks(t);onProjectChange=t=>this.view.displayProjects(t);handleProjectsRequest=()=>this.model._projects;handleUpdateLists=(t,e)=>this.model.updateLists(t,e);handleGetEditTask=t=>this.model.getTaskToEdit(t);handleEditTask=t=>this.model.editTask(t);handleDeleteTask=t=>this.model.deleteTask(t);handleCompleteTask=t=>this.model.completeTask(t);handleAddProject=t=>this.model.addProject(t);handleDeleteProject=t=>this.model.deleteProject(t);handleFilterTasks=t=>this.model.filterTaskList(t)}(new class{constructor(){this.tasks=JSON.parse(localStorage.getItem("tasks"))||[],this.projects=JSON.parse(localStorage.getItem("projects"))||[{id:1,name:"uncategorised"}]}get _projects(){return this.projects}getTaskToEdit(t){return this.tasks.filter((e=>e.id===t))}static compare=(t,e)=>t.complete>e.complete?1:t.complete<e.complete?-1:0;filterTaskList(t){let e;if("all"===t)e=this.tasks;else if("today"===t){const t=(new Date).toDateString();e=this.tasks.filter((e=>new Date(e.duedate).toDateString()===t))}else if("upcoming"===t){const t=(new Date).toDateString();e=this.tasks.filter((e=>new Date(e.duedate).toDateString()>t))}else if("overdue"===t){const t=(new Date).toDateString();e=this.tasks.filter((e=>t>new Date(e.duedate).toDateString()&&!e.complete))}else e="High"===t||"Medium"===t||"Low"===t?this.tasks.filter((e=>e.priority===t)):this.tasks.filter((e=>e.project===t));e.sort(this.compare),this.onTaskChange(e)}eventOnTaskChange(t){this.onTaskChange=t}eventOnProjectChange(t){this.onProjectChange=t}commitTaskChange(t){this.onTaskChange(t),localStorage.setItem("tasks",JSON.stringify(t))}commitProjectChange(t){this.onProjectChange(t),localStorage.setItem("projects",JSON.stringify(t))}updateLists(t,e){"task"===e?this.addTask(t):"project"===e?this.addProject(t):"edit"===e&&this.editTask(t)}addTask(t){const e={id:this.tasks.length>0?this.tasks[this.tasks.length-1].id+1:1,task:t.title,description:t.description,duedate:t.date,priority:t.priority,project:t.project,complete:!1};this.tasks.push(e),this.commitTaskChange(this.tasks)}editTask(t){this.tasks=this.tasks.map((e=>e.id===t.id?{id:e.id,task:t.title,description:t.description,duedate:t.date,priority:t.priority,project:t.project,complete:e.complete}:e)),this.commitTaskChange(this.tasks)}deleteTask(t){this.tasks=this.tasks.filter((e=>e.id!==t)),this.commitTaskChange(this.tasks)}completeTask(t){this.tasks=this.tasks.map((e=>e.id===t?{id:e.id,task:e.task,description:e.description,duedate:e.duedate,priority:e.priority,project:e.project,complete:!e.complete}:e)),this.tasks.sort(this.compare),this.commitTaskChange(this.tasks)}addProject(t){const e={id:this.projects.length>0?this.projects[this.projects.length-1].id+1:1,name:t};this.projects.push(e),this.commitProjectChange(this.projects)}deleteProject(t){const[e]=this.projects.filter((e=>e.id===t));this.tasks=this.tasks.map((t=>t.project===e.name?{id:t.id,task:t.task,description:t.description,duedate:t.duedate,priority:t.priority,project:"uncategorised",complete:t.complete}:t)),this.projects=this.projects.filter((e=>e.id!==t)),this.commitTaskChange(this.tasks),this.commitProjectChange(this.projects),this.filterTaskList("all")}},new a)})();